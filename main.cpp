#define _CRT_SECURE_NO_WARNINGS
#include <windows.h>
#include <conio.h>
#include <stdio.h>
using namespace std;


int main() {
    system("chcp 1251");
    int a, b, c, d, e; // a - выбор начала. b - выбор алгебры. c - выбор последовательностей.
    bool end = true;
    while (true) {
        printf("Добро пожаловать в справочник \nЧто вы хотите выбрать? \n[1] Алгебра \n[2] Геометрия \n");
        scanf("%d", &a);
        switch (a) {
            case 1: // Алгебра
                printf("[1] Нахождение корней квадратного уравнеия\n[2] Формулы последовательностей \n[3] Формулы сокращенного умножения\n");
                scanf("%d", &b);
                switch (b) {
                    case 1: // Корни
                        printf("Существует два вида нахождения корней:\n[1] По формуле дискриминанта\n[2] По обратной теореме Виета");
                        scanf("%d", &d);
                        switch (d) {
                            case 1: // Дискриминант
                                printf("При помощи формулы дискриминанта можно вычислить корни квадратного уравнения, обычно оно выглядит так ax^2+bx+c,\n где x - неизвестное число. \n Формула нахождения дискриминанта: b^2-4ac\n");
                                printf("Для продолжения нажмите Enter");
                                _getch();
                                printf("\n\n\n\n\n");
                                break;
                            case 2: // Виета
                                printf("При помощи Обратной теоремы Виета можно найти корни квадратного уравнения так же как и с Дискриминантом, но легче. \nФормула:\nx1+x2 = -b, где x1,2 это корни\nx1*x2 = c\n");
                                printf("Для продолжения нажмите Enter");
                                _getch();
                                printf("\n\n\n\n\n");
                                break;

                        }
                        break;
                    case 2: // Последовательности
                        printf("Существует два вида прогрессий: \nВведите нужное число: \n  \n[1] Алгебраическая \n[2] Геометрическая \n & - значит что число находится в нижнем регистре \n");
                        scanf("%d", &c);
                        switch (c) {
                            case 1: // Алгебраическая
                                printf("\nФормулы алгебраической:\nРеккурентная: a n+1& = a n& + d\nГде a n& - необходимая ступень прогрессии");
                                printf(" d - разность.\n\nРазность d: a n+1& - a n&, где n - необходимая нам ступень, например 5, тогда получится a 6+1& - a 6&\n");
                                printf("\nФормула n: a n& = a 1& + (n-1) * d\n");
                                printf("\nСумма членов S: ((a 1& + a n &)/2)*n\n");
                                printf("Для продолжения нажмите Enter");
                                _getch();
                                printf("\n\n\n\n\n");
                                break;
                            case 2: // Геометрическая
                                printf("\nФормулы геометрической:\nЛюбой член n: b 1& * q^n-1\nЗнаменатель q: b n+1& / b n&\nСумма n-ых членов: b 1& * ((1-q^n) / (1-q))");
                                printf("\nДля продолжения нажмите Enter");
                                _getch();
                                break;
                        }
                        break;
                    case 3: // Сокращенные умножения
                        printf("Существует 7 типов сокращенных умножений:\nКвадрат суммы: (a+b)^2 = a^2 + 2ab + b^2\nКвадрат разности: (a-b)^2 = a^2 - 2ab + b^2");
                        printf("\nКуб суммы: (a+b)^3 = a^3 + 3a^2b + 3ab^2+b^3\nКуб разности: (a-b)^3 = a^3 - 3a^2b + 3ab^2 - b^3");
                        printf("\nРазность квадратов: a^2 - b^2 = (a-b)(a+b)\nСумма кубов: a^3 + b^3: (a+b)(a^2 - ab + b^2)\nРазность кубов: a^3 - b^3 = (a-b)(a^2+ab+b^2)");
                        _getch();
                        printf("\n\n\n\n\n");
                        break;
                }

        }
    }
}

